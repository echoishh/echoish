<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Abbas Hub</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      margin: 0;
      background-color: #000;
      color: #fff;
      font-family: 'Roboto', sans-serif;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #111;
      padding: 15px 30px;
      position: relative;
    }
    .logo {
      font-size: 28px;
      font-weight: 700;
      color: #fff;
      display: inline-block;
    }
    .logo-orange {
      color: #FF9900;
    }
    .search-bar {
      width: 40%;
      padding: 8px 12px;
      border-radius: 4px;
      border: none;
      background-color: #222;
      color: #fff;
    }
    .user-section {
      display: flex;
      align-items: center;
      gap: 12px;
      background: linear-gradient(90deg, #181818 60%, #23272f 100%);
      padding: 6px 16px 6px 10px;
      border-radius: 18px;
      box-shadow: 0 2px 12px #6ee2ff22;
      min-width: 0;
      max-width: 220px;
    }
    .user-icon.user-avatar {
      width: 44px;
      height: 44px;
      border-radius: 50%;
      object-fit: cover;
      border: 2.5px solid #6ee2ff;
      box-shadow: 0 0 0 3px #23272f, 0 2px 12px #6ee2ff44;
      background: #222;
      transition: box-shadow 0.2s, border-color 0.2s;
    }
    .user-icon.user-avatar:hover {
      box-shadow: 0 0 0 5px #6ee2ffcc, 0 4px 24px #6ee2ff77;
      border-color: #FF9900;
    }
    .user-info {
      display: flex;
      flex-direction: column;
      min-width: 0;
    }
    .user-name {
      font-weight: 700;
      font-size: 1.08em;
      color: #fff;
      text-shadow: 0 1px 8px #6ee2ff33;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      letter-spacing: 0.5px;
    }
    .user-status {
      font-size: 0.92em;
      color: #6ee2ff;
      font-weight: 500;
      margin-top: 1px;
      letter-spacing: 0.5px;
      text-shadow: 0 0 6px #6ee2ff55;
    }
    .cicada-effect {
      text-align: right;
      font-size: 20px;
      font-weight: 700;
      letter-spacing: 2px;
      background: linear-gradient(120deg, #6ee2ff 0%, #e0e7ef 50%, #000 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      filter: drop-shadow(0 0 8px #6ee2ffcc);
      user-select: none;
      line-height: 1.1;
      margin-left: 30px;
      margin-right: 10px;
      transition: filter 0.3s;
    }
    .cicada-pop {
      display: inline-block;
      transition: 
        transform 0.25s cubic-bezier(.68,-0.55,.27,1.55),
        color 0.2s,
        text-shadow 0.2s;
      cursor: pointer;
      background: linear-gradient(120deg, #6ee2ff 0%, #fff 60%, #000 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-shadow: 0 0 12px #6ee2ff99, 0 0 2px #fff;
      margin-bottom: 2px;
      font-size: 1.1em;
      font-family: inherit;
    }
    .cicada-pop.pop-animate {
      transform: scale(1.35) rotate(-5deg);
      background: linear-gradient(90deg, #fff 0%, #6ee2ff 80%, #000 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-shadow: 0 0 24px #fff, 0 0 12px #6ee2ff;
      z-index: 2;
    }
    .cicada-pop:not(.pop-animate):hover {
      background: linear-gradient(90deg, #6ee2ff 0%, #fff 80%, #000 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-shadow: 0 0 18px #6ee2ff, 0 0 2px #fff;
      transform: scale(1.15);
    }
    .category-bar {
      display: flex;
      justify-content: center;
      background-color: #111;
      padding: 10px 0;
      gap: 15px;
    }
    .category-button {
      background-color: #222;
      color: #FF9900;
      border: none;
      padding: 8px 16px;
      font-weight: bold;
      border-radius: 4px;
      cursor: pointer;
    }
    .category-button:hover {
      background-color: #FF9900;
      color: #000;
    }
    .video-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
      gap: 20px;
      padding: 30px;
    }
    .video-card {
      background-color: #111;
      border-radius: 6px;
      overflow: hidden;
      transition: transform 0.2s ease;
      width: 100%;
      max-width: 480px;
      margin: 0 auto;
    }
    .video-card:hover {
      transform: scale(1.03);
      cursor: pointer;
    }
    .thumbnail {
      width: 100%;
      aspect-ratio: 16 / 9;
      object-fit: cover;
      display: block;
    }
    .video-info {
      padding: 12px;
    }
    .video-title {
      font-size: 16px;
      font-weight: 700;
      margin: 0 0 6px;
    }
    .video-author, .video-stats {
      font-size: 14px;
      color: #aaa;
      margin: 0;
    }
    .like-btn {
      background: none;
      border: none;
      display: flex;
      align-items: center;
      gap: 6px;
      cursor: pointer;
      margin-top: 8px;
      font-size: 15px;
      color: #aaa;
      transition: color 0.2s;
      outline: none;
      padding: 0;
    }
    .like-btn:hover .like-icon {
      stroke: #FF0000;
    }
    .like-btn:active .like-icon {
      transform: scale(1.1);
    }
    .like-icon {
      transition: stroke 0.2s, fill 0.2s, transform 0.1s;
      vertical-align: middle;
    }
    .like-count {
      min-width: 18px;
      text-align: left;
      font-weight: 700;
      color: #fff;
    }
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    /* Rainbow animated text for the Easter Egg button */
    .rainbow-text {
      background: linear-gradient(270deg, #ff0000, #ff9900, #ffee00, #00ff00, #00eaff, #0011ff, #a200ff, #ff00c8, #ff0000);
      background-size: 1800% 1800%;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      animation: rainbow-move 3s linear infinite;
      font-weight: bold;
      font-size: 1.1em;
      letter-spacing: 2px;
      display: inline-block;
    }
    @keyframes rainbow-move {
      0% {background-position: 0% 50%;}
      100% {background-position: 100% 50%;}
    }
    .easter-egg-btn {
      margin-left: 18px;
      padding: 10px 28px;
      border: none;
      border-radius: 8px;
      background: #181818;
      box-shadow: 0 2px 16px #6ee2ff33;
      cursor: pointer;
      transition: transform 0.15s, box-shadow 0.15s;
      position: relative;
      top: 2px;
      z-index: 10;
    }
    .easter-egg-btn:hover {
      transform: scale(1.08) rotate(-2deg);
      box-shadow: 0 4px 32px #6ee2ff77;
    }
    /* Abu-Roqia fake hacking modal styles */
    #easter-egg-modal {
      display: none;
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.92);
      z-index: 9999;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      color: #6ee2ff;
      font-family: 'Fira Mono', 'Consolas', monospace;
      font-size: 1.2em;
      letter-spacing: 1.5px;
      text-align: left;
      animation: fadeIn 0.5s;
    }
    #easter-egg-modal .modal-content {
      background: rgba(0,0,0,0.7);
      padding: 40px 40px 30px 40px;
      border-radius: 18px;
      box-shadow: 0 0 40px #6ee2ff55;
      min-width: 340px;
      min-height: 220px;
      max-width: 95vw;
      max-height: 90vh;
      overflow: auto;
      position: relative;
    }
    #easter-egg-modal .modal-title {
      font-size: 2em;
      color: #fff;
      margin-bottom: 18px;
      letter-spacing: 2px;
      text-align: center;
      text-shadow: 0 0 18px #6ee2ff, 0 0 2px #fff;
    }
    #easter-egg-modal .fake-console {
      background: #101c22;
      color: #6ee2ff;
      font-family: 'Fira Mono', 'Consolas', monospace;
      font-size: 1em;
      border-radius: 8px;
      padding: 18px 18px 18px 24px;
      min-height: 120px;
      margin-bottom: 18px;
      box-shadow: 0 0 12px #6ee2ff33;
      white-space: pre-line;
      line-height: 1.5;
      overflow-x: auto;
    }
    #easter-egg-modal .close-btn {
      margin-top: 10px;
      padding: 8px 28px;
      font-size: 1em;
      border: none;
      border-radius: 8px;
      background: #6ee2ff;
      color: #000;
      cursor: pointer;
      font-weight: bold;
      box-shadow: 0 2px 12px #6ee2ff55;
      transition: background 0.2s, color 0.2s;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
    #easter-egg-modal .close-btn:hover {
      background: #fff;
      color: #111;
    }
    /* Hacking process colors */
    .hack-green { color: #00ff00; font-weight: bold; }
    .hack-red { color: #ff2222; font-weight: bold; }
    .hack-yellow { color: #ffe066; font-weight: bold; }
    .hack-blue { color: #6ee2ff; font-weight: bold; }
    .hack-purple { color: #c77dff; font-weight: bold; }

    /* Phonk visual effects */
    .phonk-flash {
      animation: phonkFlash 0.2s ease-in-out;
    }
    @keyframes phonkFlash {
      0% { background-color: #000; }
      50% { background-color: #6ee2ff; }
      100% { background-color: #000; }
    }

    .phonk-glitch {
      animation: phonkGlitch 0.1s linear infinite;
    }
    @keyframes phonkGlitch {
      0% { transform: translate(0); }
      20% { transform: translate(-2px, 2px); }
      40% { transform: translate(-2px, -2px); }
      60% { transform: translate(2px, 2px); }
      80% { transform: translate(2px, -2px); }
      100% { transform: translate(0); }
    }

    .phonk-pulse {
      animation: phonkPulse 0.5s ease-in-out;
    }
    @keyframes phonkPulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }

    .phonk-shake {
      animation: phonkShake 0.1s ease-in-out;
    }
    @keyframes phonkShake {
      0% { transform: translate(0); }
      25% { transform: translate(-5px, 5px); }
      50% { transform: translate(5px, -5px); }
      75% { transform: translate(-5px, -5px); }
      100% { transform: translate(0); }
    }

    .phonk-overlay {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(102, 0, 255, 0.1);
      pointer-events: none;
      z-index: 1000;
      animation: phonkOverlay 0.3s ease-out;
    }
    @keyframes phonkOverlay {
      0% { opacity: 0; }
      50% { opacity: 0.3; }
      100% { opacity: 0; }
    }

    .logo-pop {
      display: inline-block;
      transition: transform 0.25s cubic-bezier(.68,-0.55,.27,1.55);
      cursor: pointer;
    }
    .logo-pop.pop-animate {
      transform: scale(1.35) rotate(-5deg);
      z-index: 2;
    }
    .logo-pop:not(.pop-animate):hover {
      transform: scale(1.15);
    }
  </style>
</head>
<body>
  <header class="header">
    <div style="display: flex; align-items: center;">
      <div class="logo logo-pop">
        <span class="logo-orange">Abbas</span>Hub
      </div>
      <button class="easter-egg-btn" id="easterEggBtn">
        <span class="rainbow-text">Click Me</span>
      </button>
    </div>
    <input class="search-bar" type="text" placeholder="Search videos...">
    <div class="user-section">
      <img src="KIM.png" alt="User" class="user-icon user-avatar">
      <div class="user-info">
        <span class="user-name">You (I guess)</span>
        <span class="user-status">🟢 Online</span>
      </div>
    </div>
    <div class="cicada-effect" aria-flowto="footer">
      <span class="cicada-pop">Designed</span><br>
      <span class="cicada-pop">by</span><br>
      <span class="cicada-pop">(ifykyk)</span>
    </div>
  </header>

  <nav class="category-bar">
    <button class="category-button">click any button idc</button>
    <button class="category-button">idk what to put in these buttons</button>
    <button class="category-button">but tbh </button>
    <button class="category-button">im sick</button>
  </nav>

  <audio id="nav-audio" src="طالعين_اليوم_ورايحين_للكرادة_تيك_توك_TikTok.mp3"></audio>
  <!-- Add a separate audio for the click me button -->
  <audio id="easter-egg-audio" src="clickme.mp3"></audio>

  <!-- Abu-Roqia "hacking" Easter Egg Modal -->
  <div id="easter-egg-modal">
    <div class="modal-content">
      <div class="modal-title">Abu-Roqia.exe</div>
      <div class="fake-console" id="fakeConsole">
        <!-- Animated fake hacking text will appear here -->
      </div>
      <button class="close-btn" onclick="document.getElementById('easter-egg-modal').style.display='none'">Close</button>
    </div>
  </div>

  <main class="video-grid">
    <div class="video-card" data-id="abbas1">
      <img src="abbas1.png" class="thumbnail">
      <div class="video-info">
        <h3 class="video-title">Abbas having a cozy day at the beach.</h3>
        <p class="video-author">mYd00m-</p>
        <p class="video-stats">1.2K views · 2 days ago</p>
        <button class="like-btn">
          <svg class="like-icon" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#aaa" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41 0.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg>
          <span class="like-count">52891</span>
        </button>
      </div>
    </div>
    <div class="video-card" data-id="abbas2">
      <img src="abbas2.png" class="thumbnail">
      <div class="video-info">
        <h3 class="video-title">Abbas talking about his experinces with the peach</h3>
        <p class="video-author">the idk </p>
        <p class="video-stats">3.4K views · 1 week ago</p>
        <button class="like-btn">
          <svg class="like-icon" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#aaa" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41 0.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg>
          <span class="like-count">2173</span>
        </button>
      </div>
    </div>
    <div class="video-card" data-id="abbas3">
      <img src="abbas3.png" class="thumbnail">
      <div class="video-info">
        <h3 class="video-title">The famous Iraqi Tiktoker Abbas El-Mangoli Talks about  Basra.</h3>
        <p class="video-author">btw u know who made this shit right?</p>
        <p class="video-stats">980 views · 3 days ago</p>
        <button class="like-btn">
          <svg class="like-icon" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#aaa" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41 0.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg>
          <span class="like-count">8931</span>
        </button>
      </div>
    </div>
  </main>

<script>
document.querySelector('.search-bar').addEventListener('input', function(e) {
  const query = e.target.value.toLowerCase();
  document.querySelectorAll('.video-card').forEach(card => {
    const title = card.querySelector('.video-title').textContent.toLowerCase();
    const author = card.querySelector('.video-author').textContent.toLowerCase();
    if (title.includes(query) || author.includes(query)) {
      card.style.display = '';
    } else {
      card.style.display = 'none';
    }
  });
});

// Like button functionality with fixed starting likes and localStorage
const likeDefaults = {
  abbas1: 52891,
  abbas2: 2173,
  abbas3: 8931
};

document.querySelectorAll('.video-card').forEach(card => {
  const id = card.getAttribute('data-id');
  const likeBtn = card.querySelector('.like-btn');
  const likeIcon = likeBtn.querySelector('.like-icon');
  const likeCount = likeBtn.querySelector('.like-count');

  let liked = localStorage.getItem('liked_' + id) === 'true';
  let likes;

  // Use localStorage if exists, otherwise use defaults
  if (localStorage.getItem('likes_' + id) !== null) {
    likes = parseInt(localStorage.getItem('likes_' + id));
  } else {
    likes = likeDefaults[id] || 0;
    localStorage.setItem('likes_' + id, likes);
  }
  likeCount.textContent = likes.toLocaleString();

  if (liked) {
    likeIcon.style.stroke = '#FF0000';
    likeIcon.style.fill = '#FF0000';
  } else {
    likeIcon.style.stroke = '#aaa';
    likeIcon.style.fill = 'none';
  }

  likeBtn.addEventListener('click', function() {
    liked = !liked;
    if (liked) {
      likes++;
      likeIcon.style.stroke = '#FF0000';
      likeIcon.style.fill = '#FF0000';
    } else {
      likes = Math.max(0, likes - 1);
      likeIcon.style.stroke = '#aaa';
      likeIcon.style.fill = 'none';
    }
    likeCount.textContent = likes.toLocaleString();
    localStorage.setItem('likes_' + id, likes);
    localStorage.setItem('liked_' + id, liked);
    // Trigger shake if audio is playing
    const navAudio = document.getElementById('nav-audio');
    if (!navAudio.paused) {
      triggerPhonkShake();
    }
  });
});

// Cicada pop effect
document.querySelectorAll('.cicada-pop').forEach(span => {
  span.addEventListener('mouseenter', () => {
    span.classList.add('pop-animate');
  });
  span.addEventListener('mouseleave', () => {
    span.classList.remove('pop-animate');
  });
});

// Logo pop effect
const logo = document.querySelector('.logo-pop');
if (logo) {
  logo.addEventListener('mouseenter', () => {
    logo.classList.add('pop-animate');
  });
  logo.addEventListener('mouseleave', () => {
    logo.classList.remove('pop-animate');
  });
}

// Phonk visual effects functions
let shakeInterval = null;

function triggerPhonkShake() {
  const body = document.body;
  const logo = document.querySelector('.logo');
  const navAudio = document.getElementById('nav-audio');

  // Clear previous interval
  if (shakeInterval) clearInterval(shakeInterval);

  // Function to perform shake
  const doShake = () => {
    if (!navAudio.paused && navAudio.currentTime < navAudio.duration) {
      body.classList.add('phonk-shake');
      logo.classList.add('pop-animate');
      setTimeout(() => {
        body.classList.remove('phonk-shake');
        logo.classList.remove('pop-animate');
      }, 100);
      // Add overlay
      const overlay = document.createElement('div');
      overlay.classList.add('phonk-overlay');
      document.body.appendChild(overlay);
      setTimeout(() => {
        if (document.body.contains(overlay)) document.body.removeChild(overlay);
      }, 300);
    } else {
      clearInterval(shakeInterval);
      shakeInterval = null;
    }
  };

  // Start shake immediately
  doShake();
  // Repeat every 500ms
  shakeInterval = setInterval(doShake, 500);
}

// Play song and trigger shake effect on any nav button click
const navAudio = document.getElementById('nav-audio');
document.querySelectorAll('.category-bar .category-button').forEach(btn => {
  btn.addEventListener('click', () => {
    navAudio.currentTime = 0;
    navAudio.play();
    triggerPhonkShake();
  });
});

// --- Abu-Roqia Easter Egg ---
// Show modal with fake hacking process when the rainbow button is clicked
document.getElementById('easterEggBtn').addEventListener('click', function() {
  // Play the click me sound
  const eggAudio = document.getElementById('easter-egg-audio');
  if (eggAudio) {
    eggAudio.currentTime = 0;
    eggAudio.play();
  }

  const modal = document.getElementById('easter-egg-modal');
  const consoleDiv = document.getElementById('fakeConsole');
  modal.style.display = 'flex';
  consoleDiv.innerHTML = '';
  // Fake hacking steps with color spans
  const steps = [
    "Initializing <span class='hack-blue'>Abu-Roqia.exe</span> ...",
    "Establishing secure connection to <span class='hack-red'>Cicada</span>'s <span class='hack-yellow'>MAC BOOK</span> ...",
    "Obtaining public IP address ...",
    "<span class='hack-green'>IP address obtained:</span> <span class='hack-blue'>192.**.***.**</span>",
    "Encrypting session ...",
    "Session <span class='hack-green'>encrypted</span> with key: <span class='hack-purple'>0xC1CADA</span>",
    "Uploading browser fingerprint ...",
    "Sending data to <span class='hack-red'>Cicada</span>'s <span class='hack-yellow'>MAC BOOK</span> ...",
    "<span class='hack-green'>Data sent successfully.</span>",
    "Running process: <span class='hack-blue'>abu_roqia.exe()</span>",
    "<span class='hack-green'>Process completed.</span> Await further instructions.",
    "<span class='hack-blue'>Abu-Roqia.exe terminated.</span>"
  ];
  // Slower and varied timing
  const delays = [1200, 1800, 1400, 2200, 1300, 1700, 1500, 2000, 1200, 1800, 2200, 1500];
  let i = 0;
  function nextStep() {
    if (i < steps.length) {
      consoleDiv.innerHTML += steps[i] + "<br>";
      consoleDiv.scrollTop = consoleDiv.scrollHeight;
      setTimeout(nextStep, delays[i] + Math.random()*600);
      i++;
    }
  }
  nextStep();
});
</script>
</body>
</html>

